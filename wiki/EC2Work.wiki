#summary created ec2 image for open-biomed.

= Create a test image =
{{{
########################################################################################
######## 2009-11-24
########
######## work to create an EC2 image for open-biomed
########################################################################################
## assume we already have AWS account, and have signed up for S3 and EC2
## we have launched an image through the web-based console
## now we try to ssh into this EC2 instance ec2-79-125-34-108.eu-west-1.compute.amazonaws.com
#
ssh -i id_rsa-gsg-keypair root@ec2-79-125-34-108.eu-west-1.compute.amazonaws.com
ssh -i ec2-for-flykit-2009.pem root@ec2-79-125-34-108.eu-west-1.compute.amazonaws.com
chmod 600 ec2-for-flykit-2009.pem 
ssh -i ec2-for-flykit-2009.pem root@ec2-79-125-34-108.eu-west-1.compute.amazonaws.com
## it worked
##
############################################
######## USE COMMAND-LINE TOOL TO CONTROL AMI
############################################
#### setup EC2 tools
## set up java home
#
export JAVA_HOME=/usr/bin/java
#
#### set up home for the ec2 command-line tool
#
export EC2_HOME=/home/zhaoj/kit/ec2-api-tools-1.3-42584/
echo $EC2_HOME 
export PATH=$PATH:$EC2_HOME/bin
#
#### create .ec2 directory for keeping the keys
#
mkdir .ec2
mv *.pem ~./ec2/
#
#### set up paths for the keys
#
export EC2_PRIVATE_KEY=~/.ec2/pk-ROMP3RRRNWCYH4DW2NTM5YFVFYODQZVF.pem
export EC2_CERT=~/.ec2/cert-ROMP3RRRNWCYH4DW2NTM5YFVFYODQZVF.pem
echo $JAVA_HOME
#
## All worked!!
############################################
####### try launching an AMI
############################################
#### list all available AMIs
#
ec2-describe-images -o self -o amazon
#
#### check which version of tools
#
echo $EC2_HOME 
ec2-version
#
## using api version 2009-08-15
## found docs at http://docs.amazonwebservices.com/AWSEC2/2009-08-15/GettingStartedGuide/
#
#### try launching an instance
#
ec2-describe-images -o self -o amazon
#
#### find a suitable AMI
#
ec2-describe-images -o self -o amazon | grep machine
#
#### try to find image identified by ec2-public-images/getting-started.manifest.xml in the third column
## in this case: ami-3c47a355
#
#### generate a key pair
#
ec2-add-keypair ec2openbiomed-keypair
emacs id_rsa-gsg-keypair
less id_rsa-gsg-keypair
chmod 600 id_rsa-gsg-keypair 
ls -l id_rsa-gsg-keypair
# 
#### launch an instance of an AMI
#
ec2-run-instances ami-3c47a355 -k ec2openbiomed-keypair
#
## INSTANCE i-41f89229 ami-3c47a355 pending ec2openbiomed-keypair 0 m1.small 2009-11-24T11:43:59+0000
#### check the status
#
ec2-describe-instances i-41f89229
#
#### check out in web browser http://ec2-75-101-194-85.compute-1.amazonaws.com
## it didn't work!
#### authorize network access to the instance
#
ec2-authorize default -p 22
ec2-authorize default -p 80
#
## now http acccess worked!
#
#### check SSH HOST KEY FINGERPRINTS for a public AMI not bundled
#
ec2-get-console-output i-41f89229
#
#### try to ssh to the instance
#
ssh -i id_rsa-gsg-keypair root@ec2-75-101-194-85.compute-1.amazonaws.com/
ssh -i id_rsa-gsg-keypair root@ec2-75-101-194-85.compute-1.amazonaws.com
#
## it all worked!
}}}